@startuml
skinparam classAttributeIconSize 0

enum MoveDist{
    Right
    Left
}

package Player {
    class Player {
        + Move(enum MoveDist)
    }
}

package InputProvider {
    class TouchInputProvider {}
    class PCInputProvider {}
    class KeyOperation {
        + IObservable<Unit> OnRightKey
        + IObservable<Unit> OnLeftKey
    }
}

package InputPresenter {
    class InputPresenter {}
    interface IInputProvider {
        + IObservable<MoveDirection> OnMove
    }
}

TouchInputProvider -up-|> IInputProvider
PCInputProvider -up-|> IInputProvider


package UI {
    class RightButton {
        + bool buttonDown
        + IObservable<bool> OnButtonDown
    }
    class LeftButton {
        + bool buttonDown
        + IObservable<bool> OnButtonDown
    }

}

package UnityEngine {
    class Input {}
}

/'依存関係'/
InputPresenter <.right. IInputProvider : 各種操作を通知
InputPresenter -left-> IInputProvider : Subscribe
InputPresenter -> Player : 移動させる
TouchInputProvider <.. LeftButton : ボタン押され中通知
TouchInputProvider --> LeftButton  : Subscribe
PCInputProvider <.. KeyOperation : キーボード入力を通知
PCInputProvider --> KeyOperation : Subscribe
KeyOperation --> Input

@enduml
